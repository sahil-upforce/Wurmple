# Generated by Django 4.2 on 2024-03-09 07:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tour_management", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="placeimage",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="created by",
            ),
        ),
        migrations.AddField(
            model_name="placeimage",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="deleted by",
            ),
        ),
        migrations.AddField(
            model_name="placeimage",
            name="place",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="images_of_places",
                to="tour_management.place",
                verbose_name="place",
            ),
        ),
        migrations.AddField(
            model_name="placeimage",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="updated by",
            ),
        ),
        migrations.AddField(
            model_name="placecategory",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="categories_of_places",
                to="core.category",
                verbose_name="category",
            ),
        ),
        migrations.AddField(
            model_name="placecategory",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="created by",
            ),
        ),
        migrations.AddField(
            model_name="placecategory",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="deleted by",
            ),
        ),
        migrations.AddField(
            model_name="placecategory",
            name="place",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="categories_of_places",
                to="tour_management.place",
                verbose_name="place",
            ),
        ),
        migrations.AddField(
            model_name="placecategory",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="updated by",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="city",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="places",
                to="core.city",
                verbose_name="city",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="created by",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="deleted by",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="place_categories",
            field=models.ManyToManyField(
                related_name="place_categories",
                through="tour_management.PlaceCategory",
                to="core.category",
                verbose_name="place categories",
            ),
        ),
        migrations.AddField(
            model_name="place",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="updated by",
            ),
        ),
        migrations.AddConstraint(
            model_name="placecategory",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("place", "category"),
                name="place_category_unique_constraint",
            ),
        ),
        migrations.AddConstraint(
            model_name="place",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("location",),
                name="location_unique_constraint",
            ),
        ),
    ]
